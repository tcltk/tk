#
# tk_cargo procedure tests
#

#
# TESTFILE INITIALIZATION
#

package require tcltest 2.2; # needed for "-singleproc 0"

# Load the main script "main.tcl", which takes care of:
# - setup for the application and the root window
# - loading and configuration of the tcltest test harness
# - loading of the testutils mechanism together with its utility procs
# - loading of Tk specific test constraints (additionally to constraints
#   provided by the package tcltest)
tcltest::loadTestedCommands

#
# TESTS
#

test tk_cargo-1.1 "tk_cargo set" -body {
    pack [button .btn -text Button]
    set prevText [.btn cget -text]
    .btn configure -text "NewText"
    tk_cargo set .btn prevText $prevText
} -result {}

test tk_cargo-1.2 "tk_cargo get" -body {
    list [tk_cargo get .btn prevText] [tk_cargo get .btn curText]
} -result {Button {}}

test tk_cargo-1.3 "tk_cargo get" -body {
    tk_cargo get .btn
} -result [list prevText Button]

test tk_cargo-1.4 "tk_cargo exists" -body {
    list [tk_cargo exists .btn prevText] [tk_cargo exists .btn curText]
} -result {1 0}

test tk_cargo-1.5 "tk_cargo unset" -body {
    tk_cargo unset .btn prevText
} -result {}

test tk_cargo-1.6 "tk_cargo exists" -body {
    tk_cargo exists .btn prevText
} -result 0

test tk_cargo-2.1 "tk_cargo bad op" -body {
    catch {tk_cargo bad_op .btn}
} -result 1

test tk_cargo-2.2 "tk_cargo bad window" -body {
    catch {tk_cargo get .bad.window.path.name prevText}
} -result 1

test tk_cargo-2.3 "tk_cargo set - wrong # args" -body {
    list [catch {tk_cargo set .btn}] [catch {tk_cargo set .btn prevText}]
} -result {1 1}

test tk_cargo-2.4 "tk_cargo get - wrong # args" -body {
    catch {tk_cargo get .btn prevText curText}
} -result 1

test tk_cargo-2.5 "tk_cargo exists - wrong # args" -body {
    list [catch {tk_cargo exists .btn}] \
	 [catch {tk_cargo exists .btn prevText curText}] \
	 [catch {tk_cargo exists .btn oldText prevText curText}]
} -cleanup {
    destroy .btn
} -result {1 1 1}

#
# TESTFILE CLEANUP
#

tcltest::cleanupTests
