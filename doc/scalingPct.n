'\"
'\" Copyright (c) 1996 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\"
.TH tk_scalingPct n 8.7 Tk "Tk Built-In Commands"
.so man.macros
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
tk_scalingPct, tk_svgFormat \- (FIRST DRAFT) Scaling and formatting for images
.SH SYNOPSIS
.nf
\fBtk_scalingPct \fR?\fB\-displayof \fIwindow\fR?
\fBtk_svgFormat \fR?\fB\-displayof \fIwindow\fR?
.BE
.SH DESCRIPTION
.PP
These commands return values for use in the scaling and formatting of widgets and images.  The
\fIwindow\fR argument is useful on systems with more than one display.  If omitted, it defaults to the root window.
.TP 15
\fBtk_scalingPct\fR
.
This command returns a
scaling percentage
corresponding to the display's DPI scaling level.  This value is at least
100 and is restricted to multiples of 25 (100, 125, 150, 175, 200,
225, ...).  The sizes and various attributes of the Tk core and Ttk
widgets and their components, as well as the sizes of the images used by
Tk are chosen according to the scaling percentage, and this is
recommended for applications and library packages, too.  Tk sets a display's DPI scaling level at initialization, and the script
may alter this value using the \fBtk scaling\fR command.
.RS
.PP
On the windowing systems \fBwin32\fR and \fBaqua\fR the scaling
percentage is computed from [\fBtk scaling\fR].  (On \fBaqua\fR the
result is always 100, and the desktop engine automatically scales
everything as needed.)  On \fBx11\fR, deriving the scaling percentage
from [\fBtk scaling\fR] is done as fallback method only, because the
implementation of display scaling is highly dependent on the desktop
environment and it mostly manipulates system resources that are resident
outside of Xlib, which Tk is based on.  Moreover, for technical reasons,
in many cases the value assigned to the variable \fBtk::scalingPct\fR
will be different from the one selected in the system settings (e.g.,
200 rather than 125, 150, or 175 when running GNOME on Xorg or the
Cinnamon desktop). On \fBx11\fR the scaling percentage is computed
mostly (but not exclusively) from the value of the X resource Xft.dpi,
and, as an additional step, Tk synchronizes the scaling factor used to
convert between physical units and pixels with the scaling percentage,
by passing a value derived from the latter to the \fBtk scaling\fR
command.
.RE
.TP
\fBtk_svgFormat\fR
.
This command returns a value that is suitable for use as the \fB\-format\fR option of a SVG image.  That value is
.RS
.RS 4
.PP
[\fBlist svg \-scale\fR [\fBexpr\fR {[\fB::tk_scalingPct\fR] / 100.0}]]
.RE
.PP
Typical values are {\fBsvg \-scale\fR 1.0}, {\fBsvg \-scale\fR 1.25},
{\fBsvg \-scale\fR 2.0}, etc.  It is recommended to pass the value of
this variable to the commands \fBimage create photo\fR, \fIimageName\fB
configure\fR, \fIimageName\fB put\fR, and \fIimageName\fB read\fR as the
value of their \fB\-format\fR option when creating or manipulating SVG
images, to make sure that their sizes will correspond to the display's
DPI scaling level.


.SH "VARIABLES (TEMPORARY COPY FROM tkvars.n)"
.PP
This documentation from tkvars.n is reproduced here for comparison.  If the new commands are satisfactory, these variables could be removed from Tk.
.TP 15
\fBtk::scalingPct\fR
.
Tk sets this variable at initialization time to the scaling percentage
corresponding to the display's DPI scaling level.  This value is at least
100 and is restricted to multiples of 25 (100, 125, 150, 175, 200,
225, ...).  The sizes and various attributes of the Tk core and Ttk
widgets and their components, as well as the sizes of the images used by
Tk are chosen according to the scaling percentage, and this is
recommended for applications and library packages, too.  Note that any
access to this variable is supposed to be strictly read-only!
.RS
.PP
On the windowing systems \fBwin32\fR and \fBaqua\fR the scaling
percentage is computed from [\fBtk scaling\fR].  (On \fBaqua\fR the
result is always 100, and the desktop engine automatically scales
everything as needed.)  On \fBx11\fR, deriving the scaling percentage
from [\fBtk scaling\fR] is done as fallback method only, because the
implementation of display scaling is highly dependent on the desktop
environment and it mostly manipulates system resources that are resident
outside of Xlib, which Tk is based on.  Moreover, for technical reasons,
in many cases the value assigned to the variable \fBtk::scalingPct\fR
will be different from the one selected in the system settings (e.g.,
200 rather than 125, 150, or 175 when running GNOME on Xorg or the
Cinnamon desktop). On \fBx11\fR the scaling percentage is computed
mostly (but not exclusively) from the value of the X resource Xft.dpi,
and, as an additional step, Tk synchronizes the scaling factor used to
convert between physical units and pixels with the scaling percentage,
by passing a value derived from the latter to the \fBtk scaling\fR
command.


.RE
.TP
\fBtk::svgFmt\fR
.
This variable is set at Tk initialization time to
.RS
.RS 4
.PP
[\fBlist svg \-scale\fR [\fBexpr\fR {$\fBtk::scalingPct\fR / 100.0}]]
.RE
.PP
Typical values are {\fBsvg \-scale\fR 1.0}, {\fBsvg \-scale\fR 1.25},
{\fBsvg \-scale\fR 2.0}, etc.  It is recommended to pass the value of
this variable to the commands \fBimage create photo\fR, \fIimageName\fB
configure\fR, \fIimageName\fB put\fR, and \fIimageName\fB read\fR as the
value of their \fB\-format\fR option when creating or manipulating SVG
images, to make sure that their sizes will correspond to the display's
DPI scaling level.

.SH BUGS
.PP
On X11 systems, the Tk initialization script should set the value of [\fBtk scaling\fR] for each display, but it does so only for the display of the root window "\fB.\fR".  When an additional display is first used, call \fBtk_scalingPct\fR or \fBtk_svgFormat\fR.  Either command will initialize the display if this has not already been done.  For example,
.RS 4
.PP
.nf
\fBtoplevel\fR .foo \-screen :1.0
\fBtk_scalingPct\fR \-displayof .foo
.RE
.PP
.SH "SEE ALSO"
tk(n), photo(n)
.SH KEYWORDS
scaling, svg, image, photo
'\" Local Variables:
'\" mode: nroff
'\" End:
